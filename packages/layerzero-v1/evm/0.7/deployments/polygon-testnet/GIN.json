{
  "address": "0x5f0d086EBB8D2315388F44b52659C3370dc8e065",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "message",
          "type": "bytes32"
        }
      ],
      "name": "Message",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "endpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_fromAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageComplete",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasAmountForDst",
          "type": "uint256"
        },
        {
          "internalType": "uint16[]",
          "name": "chainIds",
          "type": "uint16[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dstAddresses",
          "type": "bytes[]"
        }
      ],
      "name": "sendFirstMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa14e319bd8cd2696ba0f17cd267d41ab7e51f830c4a98bdac2571e041d10419e",
  "receipt": {
    "to": null,
    "from": "0xc13b65f7c53Cd6db2EA205a4b574b4a0858720A6",
    "contractAddress": "0x5f0d086EBB8D2315388F44b52659C3370dc8e065",
    "transactionIndex": 13,
    "gasUsed": "513287",
    "logsBloom": "0x00000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000020000000000000400000000000000000000000000800000000000000000000100000000000000000000010000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000020000000000000000001000000000000000000000000004000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x36c10f781d9afdf75a657f64c80a432a8e344369edc4b2e7217f6bb660835e0a",
    "transactionHash": "0xa14e319bd8cd2696ba0f17cd267d41ab7e51f830c4a98bdac2571e041d10419e",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 25519241,
        "transactionHash": "0xa14e319bd8cd2696ba0f17cd267d41ab7e51f830c4a98bdac2571e041d10419e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c13b65f7c53cd6db2ea205a4b574b4a0858720a6",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000002478a2d9c025ba000000000000000000000000000000000000000000000024e089a82d131d129f0000000000000000000000000000000000000000000007bf108bf0ab21f584d9000000000000000000000000000000000000000000000024e0652f8a395cece50000000000000000000000000000000000000000000007bf10b0694dfbb5aa93",
        "logIndex": 26,
        "blockHash": "0x36c10f781d9afdf75a657f64c80a432a8e344369edc4b2e7217f6bb660835e0a"
      }
    ],
    "blockNumber": 25519241,
    "cumulativeGasUsed": "2582425",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf69186dfBa60DdB133E91E9A4B5673624293d8F8"
  ],
  "numDeployments": 1,
  "solcInputHash": "93dbef87ce2871a69f63185467af4c3b",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"Message\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_fromAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasAmountForDst\",\"type\":\"uint256\"},{\"internalType\":\"uint16[]\",\"name\":\"chainIds\",\"type\":\"uint16[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dstAddresses\",\"type\":\"bytes[]\"}],\"name\":\"sendFirstMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/GIN.sol\":\"GIN\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\n\\n    // @notice get the inboundNonce of a receiver from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xbc2e0022d4d53d136830aa90037be2ed7a0966f5fd1b409bf5986185984c495f\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n}\\n\",\"keccak256\":\"0xd1617e455d90d41556bba636bc440627d301ec481de16ff04fbd520333c3c6f3\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xdc7e072cf3064081a8edf4a286ca43ddecc24330f2923d96f416f9d3f6538447\",\"license\":\"BUSL-1.1\"},\"contracts/mocks/GIN.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.7.6;\\npragma abicoder v2;\\nimport \\\"../interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"../interfaces/ILayerZeroEndpoint.sol\\\";\\n\\ncontract GIN is  ILayerZeroReceiver {\\n\\n    bool public messageComplete;\\n    ILayerZeroEndpoint public endpoint;\\n\\n    event Message(bytes32 indexed message);\\n\\n    constructor(address _endpoint) {\\n        endpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(uint16, bytes memory _fromAddress, uint64, bytes memory _payload) external override {\\n        require(msg.sender == address(endpoint));\\n        bytes32 message;\\n        assembly {\\n            message := mload(add(_payload, 32))\\n        }\\n        emit Message(message);\\n        messageComplete = true;\\n    }\\n\\n    function sendFirstMessage(uint gasAmountForDst, uint16[] calldata chainIds, bytes[] calldata dstAddresses) external payable {\\n        require(!messageComplete, \\\"The first message of LayerZero has already been sent\\\");\\n        uint16 version = 1;\\n        bytes memory _relayerParams = abi.encodePacked(version, gasAmountForDst);\\n\\n        bytes32 message = \\\"TESTING\\\";\\n        bytes memory messageString = bytes(abi.encodePacked(message));\\n        uint length = chainIds.length;\\n        uint fee = msg.value / chainIds.length;\\n        for(uint i = 0; i < chainIds.length; i++){\\n            endpoint.send{value: fee}(chainIds[i], dstAddresses[i], messageString, msg.sender, address(0x0), _relayerParams);\\n        }\\n    }\\n}\",\"keccak256\":\"0xdb53cc8a68d7f1b6a187108335cac14875353a6b30ba991ba4a690f18ce54242\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161087d38038061087d83398101604081905261002f9161005a565b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055610088565b60006020828403121561006b578081fd5b81516001600160a01b0381168114610081578182fd5b9392505050565b6107e6806100976000396000f3fe60806040526004361061003e5760003560e01c80621d35671461004357806306aaa907146100655780635e280f111461009057806362da05cb146100b2575b600080fd5b34801561004f57600080fd5b5061006361005e366004610471565b6100c5565b005b34801561007157600080fd5b5061007a610150565b6040516100879190610619565b60405180910390f35b34801561009c57600080fd5b506100a5610159565b6040516100879190610624565b6100636100c03660046104fb565b61017a565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1633146100ee57600080fd5b602081015160405181907f0e0baaba014023df9b5d9440d5ceb3bb339a70cf93635321b1e4e2e03832a71990600090a25050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505050565b60005460ff1681565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60005460ff16156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610645565b60405180910390fd5b6040516001906000906101d990839089906020016105e4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905291507f54455354494e47000000000000000000000000000000000000000000000000009060009061023d9083906020016105db565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905086600081348161027957fe5b04905060005b8981101561034f57600054610100900473ffffffffffffffffffffffffffffffffffffffff1663c5803100838d8d858181106102b757fe5b90506020020160208101906102cc9190610450565b8c8c868181106102d857fe5b90506020028101906102ea919061074d565b893360008e6040518963ffffffff1660e01b815260040161031197969594939291906106a2565b6000604051808303818588803b15801561032a57600080fd5b505af115801561033e573d6000803e3d6000fd5b50506001909301925061027f915050565b505050505050505050505050565b60008083601f84011261036e578081fd5b50813567ffffffffffffffff811115610385578182fd5b602083019150836020808302850101111561039f57600080fd5b9250929050565b600082601f8301126103b6578081fd5b813567ffffffffffffffff808211156103cb57fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820101818110838211171561040757fe5b60405282815284830160200186101561041e578384fd5b82602086016020830137918201602001929092529392505050565b803561ffff8116811461044b57600080fd5b919050565b600060208284031215610461578081fd5b61046a82610439565b9392505050565b60008060008060808587031215610486578283fd5b61048f85610439565b9350602085013567ffffffffffffffff808211156104ab578485fd5b6104b7888389016103a6565b94506040870135915080821682146104cd578384fd5b909250606086013590808211156104e2578283fd5b506104ef878288016103a6565b91505092959194509250565b600080600080600060608688031215610512578081fd5b85359450602086013567ffffffffffffffff80821115610530578283fd5b61053c89838a0161035d565b90965094506040880135915080821115610554578283fd5b506105618882890161035d565b969995985093965092949392505050565b60008151808452815b818110156105975760208185018101518683018201520161057b565b818111156105a85782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b90815260200190565b60f09290921b7fffff000000000000000000000000000000000000000000000000000000000000168252600282015260220190565b901515815260200190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60208082526034908201527f546865206669727374206d657373616765206f66204c617965725a65726f206860408201527f617320616c7265616479206265656e2073656e74000000000000000000000000606082015260800190565b600061ffff8916825260c060208301528660c0830152868860e08401378060e088840101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f880116820160e083820301604084015261070760e0820188610572565b73ffffffffffffffffffffffffffffffffffffffff87811660608601528616608085015283810360a0850152905061073f8185610572565b9a9950505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610781578283fd5b83018035915067ffffffffffffffff82111561079b578283fd5b60200191503681900382131561039f57600080fdfea26469706673582212200635a2cdd8b210fcb77bdd992a2c9b929f20628667b61ff4f0ce614dfcb6303964736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061003e5760003560e01c80621d35671461004357806306aaa907146100655780635e280f111461009057806362da05cb146100b2575b600080fd5b34801561004f57600080fd5b5061006361005e366004610471565b6100c5565b005b34801561007157600080fd5b5061007a610150565b6040516100879190610619565b60405180910390f35b34801561009c57600080fd5b506100a5610159565b6040516100879190610624565b6100636100c03660046104fb565b61017a565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1633146100ee57600080fd5b602081015160405181907f0e0baaba014023df9b5d9440d5ceb3bb339a70cf93635321b1e4e2e03832a71990600090a25050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505050565b60005460ff1681565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60005460ff16156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610645565b60405180910390fd5b6040516001906000906101d990839089906020016105e4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905291507f54455354494e47000000000000000000000000000000000000000000000000009060009061023d9083906020016105db565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905086600081348161027957fe5b04905060005b8981101561034f57600054610100900473ffffffffffffffffffffffffffffffffffffffff1663c5803100838d8d858181106102b757fe5b90506020020160208101906102cc9190610450565b8c8c868181106102d857fe5b90506020028101906102ea919061074d565b893360008e6040518963ffffffff1660e01b815260040161031197969594939291906106a2565b6000604051808303818588803b15801561032a57600080fd5b505af115801561033e573d6000803e3d6000fd5b50506001909301925061027f915050565b505050505050505050505050565b60008083601f84011261036e578081fd5b50813567ffffffffffffffff811115610385578182fd5b602083019150836020808302850101111561039f57600080fd5b9250929050565b600082601f8301126103b6578081fd5b813567ffffffffffffffff808211156103cb57fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820101818110838211171561040757fe5b60405282815284830160200186101561041e578384fd5b82602086016020830137918201602001929092529392505050565b803561ffff8116811461044b57600080fd5b919050565b600060208284031215610461578081fd5b61046a82610439565b9392505050565b60008060008060808587031215610486578283fd5b61048f85610439565b9350602085013567ffffffffffffffff808211156104ab578485fd5b6104b7888389016103a6565b94506040870135915080821682146104cd578384fd5b909250606086013590808211156104e2578283fd5b506104ef878288016103a6565b91505092959194509250565b600080600080600060608688031215610512578081fd5b85359450602086013567ffffffffffffffff80821115610530578283fd5b61053c89838a0161035d565b90965094506040880135915080821115610554578283fd5b506105618882890161035d565b969995985093965092949392505050565b60008151808452815b818110156105975760208185018101518683018201520161057b565b818111156105a85782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b90815260200190565b60f09290921b7fffff000000000000000000000000000000000000000000000000000000000000168252600282015260220190565b901515815260200190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60208082526034908201527f546865206669727374206d657373616765206f66204c617965725a65726f206860408201527f617320616c7265616479206265656e2073656e74000000000000000000000000606082015260800190565b600061ffff8916825260c060208301528660c0830152868860e08401378060e088840101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f880116820160e083820301604084015261070760e0820188610572565b73ffffffffffffffffffffffffffffffffffffffff87811660608601528616608085015283810360a0850152905061073f8185610572565b9a9950505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610781578283fd5b83018035915067ffffffffffffffff82111561079b578283fd5b60200191503681900382131561039f57600080fdfea26469706673582212200635a2cdd8b210fcb77bdd992a2c9b929f20628667b61ff4f0ce614dfcb6303964736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11120,
        "contract": "contracts/mocks/GIN.sol:GIN",
        "label": "messageComplete",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 11122,
        "contract": "contracts/mocks/GIN.sol:GIN",
        "label": "endpoint",
        "offset": 1,
        "slot": "0",
        "type": "t_contract(ILayerZeroEndpoint)10862"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ILayerZeroEndpoint)10862": {
        "encoding": "inplace",
        "label": "contract ILayerZeroEndpoint",
        "numberOfBytes": "20"
      }
    }
  }
}