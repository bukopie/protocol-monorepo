{
  "address": "0x574B6a043e5165A8401891a848986450D806c55d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isAddressContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe5dfaeba6da1ea21be59556413231affa45d2332439f66d5cd02b7894a952ceb",
  "receipt": {
    "to": null,
    "from": "0xc13b65f7c53Cd6db2EA205a4b574b4a0858720A6",
    "contractAddress": "0x574B6a043e5165A8401891a848986450D806c55d",
    "transactionIndex": 12,
    "gasUsed": "90819",
    "logsBloom": "0x
    "blockHash": "0x7eab8b8a629913778a7c010e758d6aa3e7522c1e0cee92d7634e3028c469d034",
    "transactionHash": "0xe5dfaeba6da1ea21be59556413231affa45d2332439f66d5cd02b7894a952ceb",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 25757519,
        "transactionHash": "0xe5dfaeba6da1ea21be59556413231affa45d2332439f66d5cd02b7894a952ceb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c13b65f7c53cd6db2ea205a4b574b4a0858720a6",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000ce7f9d95ab0000000000000000000000000000000000000000000000000dfd23a73a95222f56000000000000000000000000000000000000000000000285232456fa3c2f701b00000000000000000000000000000000000000000000000dfd22d8baf78c845600000000000000000000000000000000000000000000028523252579d9c51b1b",
        "logIndex": 50,
        "blockHash": "0x7eab8b8a629913778a7c010e758d6aa3e7522c1e0cee92d7634e3028c469d034"
      }
    ],
    "blockNumber": 25757519,
    "cumulativeGasUsed": "1342694",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6e9fb5d113f8b24035e38f4a7f41a54c",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAddressContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/IsContract.sol\":\"IsContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/mocks/IsContract.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.7.6;\\n\\ncontract IsContract {\\n\\n    function isAddressContract(address addr) external view returns (bool){\\n        // check if the toAddress is a contract. We are not concerned about addresses that pretend to be wallets. because worst case we just delete their payload if being malicious\\n        // we can guarantee that if a size > 0, then the contract is definitely a contract address in this context\\n        uint size;\\n        assembly { size := extcodesize(addr) }\\n        return size != 0;\\n    }\\n\\n}\",\"keccak256\":\"0x6c4d0b7c632da93d71ce742d38fdbc78058e805d26281beb55450434212c14f9\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060ad8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b5f9dc9114602d575b600080fd5b605d60048036036020811015604157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166071565b604080519115158252519081900360200190f35b3b15159056fea2646970667358221220c08d7487580443d0776a4f1db0285c09b3f961baffadc698373a4c563a0a1a7564736f6c63430007060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063b5f9dc9114602d575b600080fd5b605d60048036036020811015604157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166071565b604080519115158252519081900360200190f35b3b15159056fea2646970667358221220c08d7487580443d0776a4f1db0285c09b3f961baffadc698373a4c563a0a1a7564736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}