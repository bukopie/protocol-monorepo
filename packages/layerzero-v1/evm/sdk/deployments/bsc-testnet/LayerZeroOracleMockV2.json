{
  "address": "0x33419108f5F3B7FA0029F54F8C0042330D46e2a7",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockConfirmations",
          "type": "uint256"
        }
      ],
      "name": "OracleNotified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "_outboundBlockConfirmation",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assignJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainPriceLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_relayerAddress",
          "type": "address"
        }
      ],
      "name": "isApproved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approve",
          "type": "bool"
        }
      ],
      "name": "setApprovedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_deliveryAddress",
          "type": "address"
        }
      ],
      "name": "setDeliveryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_destinationChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_outboundProofType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ulnAddress",
          "type": "address"
        }
      ],
      "name": "setUln",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uln",
      "outputs": [
        {
          "internalType": "contract ILayerZeroUltraLightNodeV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "_blockHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_confirmations",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "updateHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uln",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf9f68ab4f53ce1004f82c26a32e3edab323193ee0b2a93236f39566dda054277",
  "receipt": {
    "to": null,
    "from": "0xc13b65f7c53Cd6db2EA205a4b574b4a0858720A6",
    "contractAddress": "0x33419108f5F3B7FA0029F54F8C0042330D46e2a7",
    "transactionIndex": 1,
    "gasUsed": "1006859",
    "logsBloom": "0x
    "blockHash": "0xa6e67981ff96331883f845f222e27969f7613b7ab80386a55ec76c386680258c",
    "transactionHash": "0xf9f68ab4f53ce1004f82c26a32e3edab323193ee0b2a93236f39566dda054277",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 25402431,
        "transactionHash": "0xf9f68ab4f53ce1004f82c26a32e3edab323193ee0b2a93236f39566dda054277",
        "address": "0x33419108f5F3B7FA0029F54F8C0042330D46e2a7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c13b65f7c53cd6db2ea205a4b574b4a0858720a6"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xa6e67981ff96331883f845f222e27969f7613b7ab80386a55ec76c386680258c"
      }
    ],
    "blockNumber": 25402431,
    "cumulativeGasUsed": "1130966",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "a1d7433d1853d5fd4b18a6f9a362b6e9",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockConfirmations\",\"type\":\"uint256\"}],\"name\":\"OracleNotified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"_outboundBlockConfirmation\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assignJob\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainPriceLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayerAddress\",\"type\":\"address\"}],\"name\":\"isApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"jobs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"setApprovedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_deliveryAddress\",\"type\":\"address\"}],\"name\":\"setDeliveryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_destinationChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_outboundProofType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ulnAddress\",\"type\":\"address\"}],\"name\":\"setUln\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uln\",\"outputs\":[{\"internalType\":\"contract ILayerZeroUltraLightNodeV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"_blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_confirmations\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"updateHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uln\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/LayerZeroOracleMockV2.sol\":\"LayerZeroOracleMockV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1153f6dd334c01566417b8c551122450542a2b75a2bbb379d59a8c320ed6da28\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroOracleV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.7.0;\\n\\ninterface ILayerZeroOracleV2 {\\n    // @notice query price and assign jobs at the same time\\n    // @param _dstChainId - the destination endpoint identifier\\n    // @param _outboundProofType - the proof type identifier to specify proof to be relayed\\n    // @param _outboundBlockConfirmation - block confirmation delay before relaying blocks\\n    // @param _userApplication - the source sending contract address\\n    function assignJob(uint16 _dstChainId, uint16 _outboundProofType, uint64 _outboundBlockConfirmation, address _userApplication) external returns (uint price);\\n\\n    // @notice query the oracle price for relaying block information to the destination chain\\n    // @param _dstChainId the destination endpoint identifier\\n    // @param _outboundProofType the proof type identifier to specify the data to be relayed\\n    // @param _outboundBlockConfirmation - block confirmation delay before relaying blocks\\n    // @param _userApplication - the source sending contract address\\n    function getFee(uint16 _dstChainId, uint16 _outboundProofType, uint64 _outboundBlockConfirmation, address _userApplication) external view returns (uint price);\\n\\n    // @notice withdraw the accrued fee in ultra light node\\n    // @param _to - the fee receiver\\n    // @param _amount - the withdrawal amount\\n    function withdrawFee(address _uln,address payable _to, uint _amount) external;\\n}\\n\",\"keccak256\":\"0xab15d00b042df0162a5f4ae8709575088884cc2d1ea096b671dca72300fcbeb0\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUltraLightNodeV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.7.0;\\npragma abicoder v2;\\n\\ninterface ILayerZeroUltraLightNodeV2 {\\n    // Relayer functions\\n    function validateTransactionProof(uint16 _srcChainId, address _dstAddress, uint _gasLimit, bytes32 _lookupHash, bytes32 _blockData, bytes calldata _transactionProof) external;\\n\\n    // an Oracle delivers the block data using updateHash()\\n    function updateHash(uint16 _srcChainId, bytes32 _lookupHash, uint _confirmations, bytes32 _blockData) external;\\n\\n    // can only withdraw the receivable of the msg.sender\\n    function withdrawNative(address payable _to, uint _amount) external;\\n\\n    function withdrawZRO(address _to, uint _amount) external;\\n\\n    // view functions\\n    function getAppConfig(uint16 _remoteChainId, address _userApplicationAddress) external view returns (ApplicationConfiguration memory);\\n\\n    function accruedNativeFee(address _address) external view returns (uint);\\n\\n    struct ApplicationConfiguration {\\n        uint16 inboundProofLibraryVersion;\\n        uint64 inboundBlockConfirmations;\\n        address relayer;\\n        uint16 outboundProofType;\\n        uint64 outboundBlockConfirmations;\\n        address oracle;\\n    }\\n\\n    event HashReceived(uint16 indexed srcChainId, address indexed oracle, bytes32 lookupHash, bytes32 blockData, uint confirmations);\\n    event RelayerParams(bytes adapterParams, uint16 outboundProofType);\\n    event Packet(bytes payload);\\n    event InvalidDst(uint16 indexed srcChainId, bytes srcAddress, address indexed dstAddress, uint64 nonce, bytes32 payloadHash);\\n    event PacketReceived(uint16 indexed srcChainId, bytes srcAddress, address indexed dstAddress, uint64 nonce, bytes32 payloadHash);\\n    event AppConfigUpdated(address indexed userApplication, uint indexed configType, bytes newConfig);\\n    event AddInboundProofLibraryForChain(uint16 indexed chainId, address lib);\\n    event EnableSupportedOutboundProof(uint16 indexed chainId, uint16 proofType);\\n    event SetChainAddressSize(uint16 indexed chainId, uint size);\\n    event SetDefaultConfigForChainId(uint16 indexed chainId, uint16 inboundProofLib, uint64 inboundBlockConfirm, address relayer, uint16 outboundProofType, uint64 outboundBlockConfirm, address oracle);\\n    event SetDefaultAdapterParamsForChainId(uint16 indexed chainId, uint16 indexed proofType, bytes adapterParams);\\n    event SetLayerZeroToken(address indexed tokenAddress);\\n    event SetRemoteUln(uint16 indexed chainId, bytes32 uln);\\n    event SetTreasury(address indexed treasuryAddress);\\n    event WithdrawZRO(address indexed msgSender, address indexed to, uint amount);\\n    event WithdrawNative(address indexed msgSender, address indexed to, uint amount);\\n}\\n\",\"keccak256\":\"0x16c9c5227a5ebbf52ff579f956674a25c98d149d169f6070af274c2a08276352\",\"license\":\"BUSL-1.1\"},\"contracts/mocks/LayerZeroOracleMockV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/ILayerZeroOracleV2.sol\\\";\\nimport \\\"../interfaces/ILayerZeroUltraLightNodeV2.sol\\\";\\n\\ncontract LayerZeroOracleMockV2 is ILayerZeroOracleV2, Ownable, ReentrancyGuard {\\n    mapping(address => bool) public approvedAddresses;\\n    mapping(uint16 => mapping(uint16 => uint)) public chainPriceLookup;\\n    mapping(uint16 => mapping(uint16 => uint64)) public jobs; // mocked, not used for anything yet\\n    uint public fee;\\n    ILayerZeroUltraLightNodeV2 public uln; // ultraLightNode instance\\n\\n    event OracleNotified(uint16 dstChainId, uint16 _outboundProofType, uint blockConfirmations);\\n    event Withdraw(address to, uint amount);\\n\\n    constructor() {\\n        approvedAddresses[msg.sender] = true;\\n    }\\n\\n    // mocked for now, will auto accept the job, and return the price at the same time\\n    function assignJob(uint16 _dstChainId, uint16 _outboundProofType, uint64 _outboundBlockConfirmation, address) external override returns (uint price) {\\n        jobs[_dstChainId][_outboundProofType] = _outboundBlockConfirmation;\\n        return chainPriceLookup[_outboundProofType][_dstChainId];\\n    }\\n\\n    function getFee(\\n        uint16 _dstChainId,\\n        uint16 _outboundProofType,\\n        uint64, /*_outboundBlockConfirmation*/\\n        address\\n    ) external view override returns (uint) {\\n        return chainPriceLookup[_outboundProofType][_dstChainId];\\n    }\\n\\n    function withdrawFee(address _uln, address payable _to, uint _amount) public override onlyOwner nonReentrant {\\n        (bool success, ) = _to.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"failed to withdraw\\\");\\n        emit Withdraw(_to, _amount);\\n    }\\n\\n    function updateHash(uint16 _remoteChainId, bytes32 _blockHash, uint _confirmations, bytes32 _data) external {\\n        require(approvedAddresses[msg.sender], \\\"LayerZeroOracleMock: caller must be approved\\\");\\n        uln.updateHash(_remoteChainId, _blockHash, _confirmations, _data);\\n    }\\n\\n    function setUln(address ulnAddress) external onlyOwner {\\n        uln = ILayerZeroUltraLightNodeV2(ulnAddress);\\n    }\\n\\n    function setDeliveryAddress(uint16 _dstChainId, address _deliveryAddress) public onlyOwner {}\\n\\n    function setPrice(uint16 _destinationChainId, uint16 _outboundProofType, uint _price) external onlyOwner {\\n        chainPriceLookup[_outboundProofType][_destinationChainId] = _price;\\n    }\\n\\n    function setApprovedAddress(address _oracleAddress, bool _approve) external {\\n        approvedAddresses[_oracleAddress] = _approve;\\n    }\\n\\n    function isApproved(address _relayerAddress) public view returns (bool) {\\n        return approvedAddresses[_relayerAddress];\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x45280ea193787998091cb6bc2ca931c51365436ed00b9f1eb04d9b792079a75c\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b610089565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001808055336000908152600260205260409020805460ff1916909117905561008d565b3390565b6110258061009c6000396000f3fe6080604052600436106101125760003560e01c80638da5cb5b116100a5578063cd84b89d11610074578063ddca3f4311610059578063ddca3f43146104dc578063f136a874146104f1578063f2fde38b1461053157610119565b8063cd84b89d14610449578063d5ad9faa1461048957610119565b80638da5cb5b1461035b578063bccc96d514610370578063c5e193cd146103ae578063c758b0171461041357610119565b8063673448dd116100e1578063673448dd146102745780636c473aff146102c8578063704316e514610306578063715018a61461034657610119565b80631095b6d71461011b5780632ca4a5b01461016b5780635553fb8e146101b5578063575765e21461022c57610119565b3661011957005b005b34801561012757600080fd5b506101196004803603606081101561013e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610571565b34801561017757600080fd5b506101196004803603604081101561018e57600080fd5b50803561ffff16906020013573ffffffffffffffffffffffffffffffffffffffff166107b8565b3480156101c157600080fd5b5061021a600480360360808110156101d857600080fd5b50803561ffff90811691602081013590911690604081013567ffffffffffffffff16906060013573ffffffffffffffffffffffffffffffffffffffff16610864565b60408051918252519081900360200190f35b34801561023857600080fd5b506101196004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135151561088d565b34801561028057600080fd5b506102b46004803603602081101561029757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108e3565b604080519115158252519081900360200190f35b3480156102d457600080fd5b506102dd61090e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561031257600080fd5b506101196004803603608081101561032957600080fd5b5061ffff813516906020810135906040810135906060013561092a565b34801561035257600080fd5b50610119610a3b565b34801561036757600080fd5b506102dd610b52565b34801561037c57600080fd5b506101196004803603606081101561039357600080fd5b5061ffff813581169160208101359091169060400135610b6e565b3480156103ba57600080fd5b5061021a600480360360808110156103d157600080fd5b50803561ffff90811691602081013590911690604081013567ffffffffffffffff16906060013573ffffffffffffffffffffffffffffffffffffffff16610c3c565b34801561041f57600080fd5b5061021a6004803603604081101561043657600080fd5b5061ffff81358116916020013516610caa565b34801561045557600080fd5b506101196004803603602081101561046c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610cc7565b34801561049557600080fd5b506104bf600480360360408110156104ac57600080fd5b5061ffff81358116916020013516610db6565b6040805167ffffffffffffffff9092168252519081900360200190f35b3480156104e857600080fd5b5061021a610ddd565b3480156104fd57600080fd5b506102b46004803603602081101561051457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610de3565b34801561053d57600080fd5b506101196004803603602081101561055457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610df8565b610579610f99565b73ffffffffffffffffffffffffffffffffffffffff16610597610b52565b73ffffffffffffffffffffffffffffffffffffffff161461061957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002600154141561068b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260015560405160009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d80600081146106e8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ed565b606091505b505090508061075d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f2077697468647261770000000000000000000000000000604482015290519081900360640190fd5b6040805173ffffffffffffffffffffffffffffffffffffffff851681526020810184905281517f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364929181900390910190a15050600180555050565b6107c0610f99565b73ffffffffffffffffffffffffffffffffffffffff166107de610b52565b73ffffffffffffffffffffffffffffffffffffffff161461086057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b5050565b61ffff808416600090815260036020908152604080832093881683529290522054949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60065473ffffffffffffffffffffffffffffffffffffffff1681565b3360009081526002602052604090205460ff16610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fc4602c913960400191505060405180910390fd5b600654604080517f704316e500000000000000000000000000000000000000000000000000000000815261ffff87166004820152602481018690526044810185905260648101849052905173ffffffffffffffffffffffffffffffffffffffff9092169163704316e59160848082019260009290919082900301818387803b158015610a1d57600080fd5b505af1158015610a31573d6000803e3d6000fd5b5050505050505050565b610a43610f99565b73ffffffffffffffffffffffffffffffffffffffff16610a61610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610ae357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b610b76610f99565b73ffffffffffffffffffffffffffffffffffffffff16610b94610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610c1657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61ffff918216600090815260036020908152604080832095909416825293909352912055565b61ffff80851660008181526004602090815260408083209488168352938152838220805467ffffffffffffffff88167fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090911617905560038152838220928252919091522054949350505050565b600360209081526000928352604080842090915290825290205481565b610ccf610f99565b73ffffffffffffffffffffffffffffffffffffffff16610ced610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610d6f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600460209081526000928352604080842090915290825290205467ffffffffffffffff1681565b60055481565b60026020526000908152604090205460ff1681565b610e00610f99565b73ffffffffffffffffffffffffffffffffffffffff16610e1e610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610ea057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610f9e6026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734c617965725a65726f4f7261636c654d6f636b3a2063616c6c6572206d75737420626520617070726f766564a26469706673582212200990a98783edeefed7f0a853c0bccc2a0c3647fd597a95b49df2df5a4009894764736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106101125760003560e01c80638da5cb5b116100a5578063cd84b89d11610074578063ddca3f4311610059578063ddca3f43146104dc578063f136a874146104f1578063f2fde38b1461053157610119565b8063cd84b89d14610449578063d5ad9faa1461048957610119565b80638da5cb5b1461035b578063bccc96d514610370578063c5e193cd146103ae578063c758b0171461041357610119565b8063673448dd116100e1578063673448dd146102745780636c473aff146102c8578063704316e514610306578063715018a61461034657610119565b80631095b6d71461011b5780632ca4a5b01461016b5780635553fb8e146101b5578063575765e21461022c57610119565b3661011957005b005b34801561012757600080fd5b506101196004803603606081101561013e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610571565b34801561017757600080fd5b506101196004803603604081101561018e57600080fd5b50803561ffff16906020013573ffffffffffffffffffffffffffffffffffffffff166107b8565b3480156101c157600080fd5b5061021a600480360360808110156101d857600080fd5b50803561ffff90811691602081013590911690604081013567ffffffffffffffff16906060013573ffffffffffffffffffffffffffffffffffffffff16610864565b60408051918252519081900360200190f35b34801561023857600080fd5b506101196004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135151561088d565b34801561028057600080fd5b506102b46004803603602081101561029757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108e3565b604080519115158252519081900360200190f35b3480156102d457600080fd5b506102dd61090e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561031257600080fd5b506101196004803603608081101561032957600080fd5b5061ffff813516906020810135906040810135906060013561092a565b34801561035257600080fd5b50610119610a3b565b34801561036757600080fd5b506102dd610b52565b34801561037c57600080fd5b506101196004803603606081101561039357600080fd5b5061ffff813581169160208101359091169060400135610b6e565b3480156103ba57600080fd5b5061021a600480360360808110156103d157600080fd5b50803561ffff90811691602081013590911690604081013567ffffffffffffffff16906060013573ffffffffffffffffffffffffffffffffffffffff16610c3c565b34801561041f57600080fd5b5061021a6004803603604081101561043657600080fd5b5061ffff81358116916020013516610caa565b34801561045557600080fd5b506101196004803603602081101561046c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610cc7565b34801561049557600080fd5b506104bf600480360360408110156104ac57600080fd5b5061ffff81358116916020013516610db6565b6040805167ffffffffffffffff9092168252519081900360200190f35b3480156104e857600080fd5b5061021a610ddd565b3480156104fd57600080fd5b506102b46004803603602081101561051457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610de3565b34801561053d57600080fd5b506101196004803603602081101561055457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610df8565b610579610f99565b73ffffffffffffffffffffffffffffffffffffffff16610597610b52565b73ffffffffffffffffffffffffffffffffffffffff161461061957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002600154141561068b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260015560405160009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d80600081146106e8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ed565b606091505b505090508061075d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f2077697468647261770000000000000000000000000000604482015290519081900360640190fd5b6040805173ffffffffffffffffffffffffffffffffffffffff851681526020810184905281517f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364929181900390910190a15050600180555050565b6107c0610f99565b73ffffffffffffffffffffffffffffffffffffffff166107de610b52565b73ffffffffffffffffffffffffffffffffffffffff161461086057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b5050565b61ffff808416600090815260036020908152604080832093881683529290522054949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b60065473ffffffffffffffffffffffffffffffffffffffff1681565b3360009081526002602052604090205460ff16610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610fc4602c913960400191505060405180910390fd5b600654604080517f704316e500000000000000000000000000000000000000000000000000000000815261ffff87166004820152602481018690526044810185905260648101849052905173ffffffffffffffffffffffffffffffffffffffff9092169163704316e59160848082019260009290919082900301818387803b158015610a1d57600080fd5b505af1158015610a31573d6000803e3d6000fd5b5050505050505050565b610a43610f99565b73ffffffffffffffffffffffffffffffffffffffff16610a61610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610ae357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b610b76610f99565b73ffffffffffffffffffffffffffffffffffffffff16610b94610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610c1657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61ffff918216600090815260036020908152604080832095909416825293909352912055565b61ffff80851660008181526004602090815260408083209488168352938152838220805467ffffffffffffffff88167fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090911617905560038152838220928252919091522054949350505050565b600360209081526000928352604080842090915290825290205481565b610ccf610f99565b73ffffffffffffffffffffffffffffffffffffffff16610ced610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610d6f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600460209081526000928352604080842090915290825290205467ffffffffffffffff1681565b60055481565b60026020526000908152604090205460ff1681565b610e00610f99565b73ffffffffffffffffffffffffffffffffffffffff16610e1e610b52565b73ffffffffffffffffffffffffffffffffffffffff1614610ea057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610f9e6026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734c617965725a65726f4f7261636c654d6f636b3a2063616c6c6572206d75737420626520617070726f766564a26469706673582212200990a98783edeefed7f0a853c0bccc2a0c3647fd597a95b49df2df5a4009894764736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 493,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2074,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 14804,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "approvedAddresses",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 14810,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "chainPriceLookup",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"
      },
      {
        "astId": 14816,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "jobs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint64))"
      },
      {
        "astId": 14818,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "fee",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 14820,
        "contract": "contracts/mocks/LayerZeroOracleMockV2.sol:LayerZeroOracleMockV2",
        "label": "uln",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ILayerZeroUltraLightNodeV2)13919"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ILayerZeroUltraLightNodeV2)13919": {
        "encoding": "inplace",
        "label": "contract ILayerZeroUltraLightNodeV2",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_uint256)"
      },
      "t_mapping(t_uint16,t_mapping(t_uint16,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint16 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_uint64)"
      },
      "t_mapping(t_uint16,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint16,t_uint64)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}